<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0613.1930                               -->
<workbook original-version='18.1' source-build='2024.2.0 (20242.24.0613.1930)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='Covid_19_Dashboard_17208795006790' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau_Table_3)' inline='true' name='federated.0rosy2g1m5b7ms1ggxkjs06rr7qg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Table_3' name='excel-direct.1nmqtz418wl0g01h93bx81xc6xeg'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/User/Desktop/Portfolio/Covid_19_Database_Tableau/Tableau_Table_3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1nmqtz418wl0g01h93bx81xc6xeg' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Highest_Infection_count' ordinal='1' />
            <column datatype='integer' name='population' ordinal='2' />
            <column datatype='real' name='Percent_population_infected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1nmqtz418wl0g01h93bx81xc6xeg' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Highest_Infection_count' ordinal='1' />
            <column datatype='integer' name='population' ordinal='2' />
            <column datatype='real' name='Percent_population_infected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D256:no:A1:D256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_927DDF358B4342DEAB8AC5D222271F7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_Infection_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highest_Infection_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_Infection_count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_927DDF358B4342DEAB8AC5D222271F7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_927DDF358B4342DEAB8AC5D222271F7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent_population_infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent_population_infected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Percent_population_infected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_927DDF358B4342DEAB8AC5D222271F7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection count' datatype='integer' name='[Highest_Infection_count]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent population infected' datatype='real' name='[Percent_population_infected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_927DDF358B4342DEAB8AC5D222271F7B]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/User/AppData/Local/Temp/TableauTemp/#TableauTemp_08io4on1gee9oe14ny6061shc31p.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/13/2024 11:25:00 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Highest_Infection_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Highest_Infection_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Highest_Infection_count</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>245</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percent_population_infected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Percent_population_infected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percent_population_infected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>245</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_927DDF358B4342DEAB8AC5D222271F7B'>
            <properties context=''>
              <relation connection='excel-direct.1nmqtz418wl0g01h93bx81xc6xeg' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Highest_Infection_count' ordinal='1' />
                  <column datatype='integer' name='population' ordinal='2' />
                  <column datatype='real' name='Percent_population_infected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_Table_1)' inline='true' name='federated.120sokc1wo6j1g1fp2ayi0mc3b12' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Table_1' name='excel-direct.0d79xc01w5hoir1g0lrkt02bav5t'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/User/Desktop/Portfolio/Covid_19_Database_Tableau/Tableau_Table_1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0d79xc01w5hoir1g0lrkt02bav5t' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='Death_Percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0d79xc01w5hoir1g0lrkt02bav5t' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='Death_Percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6E410264CC75460597E6A005AC3863ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6E410264CC75460597E6A005AC3863ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death_Percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death_Percentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Death_Percentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6E410264CC75460597E6A005AC3863ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[Death_Percentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_6E410264CC75460597E6A005AC3863ED]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/User/AppData/Local/Temp/TableauTemp/#TableauTemp_1d65qcv0wg2dhm13hpele0vdsyfi.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/13/2024 11:21:52 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Death_Percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Death_Percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Death_Percentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_6E410264CC75460597E6A005AC3863ED'>
            <properties context=''>
              <relation connection='excel-direct.0d79xc01w5hoir1g0lrkt02bav5t' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='Death_Percentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_Table_2)' inline='true' name='federated.1aknrv11svhzrw1e5t6h00kcr198' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Table_2' name='excel-direct.07qrend191rw0l183o3sz18dwddr'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/User/Desktop/Portfolio/Covid_19_Database_Tableau/Tableau_Table_2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.07qrend191rw0l183o3sz18dwddr' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='Total_Death_Count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.07qrend191rw0l183o3sz18dwddr' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='Total_Death_Count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_23CFCB7E978A40ED949DF94D09B4D1E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Death_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Death_Count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_Death_Count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_23CFCB7E978A40ED949DF94D09B4D1E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[Total_Death_Count]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_23CFCB7E978A40ED949DF94D09B4D1E2]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/User/AppData/Local/Temp/TableauTemp/#TableauTemp_1hd2rmu1u8b82z1dibi6i0g3efnb.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/13/2024 11:23:28 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total_Death_Count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total_Death_Count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total_Death_Count</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_23CFCB7E978A40ED949DF94D09B4D1E2'>
            <properties context=''>
              <relation connection='excel-direct.07qrend191rw0l183o3sz18dwddr' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='integer' name='Total_Death_Count' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_Table_4)' inline='true' name='federated.1ksqdmt0ab1dez10of8730o82rr2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Table_4' name='excel-direct.0983ob81mzpelm15h3rln11bxe8d'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/User/Desktop/Portfolio/Covid_19_Database_Tableau/Tableau_Table_4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0983ob81mzpelm15h3rln11bxe8d' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='Highest_Infection_count' ordinal='3' />
            <column datatype='real' name='Percent_population_infected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0983ob81mzpelm15h3rln11bxe8d' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='Highest_Infection_count' ordinal='3' />
            <column datatype='real' name='Percent_population_infected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C8AB5A30A664C9F95DDBB58A2653481]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C8AB5A30A664C9F95DDBB58A2653481]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C8AB5A30A664C9F95DDBB58A2653481]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_Infection_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highest_Infection_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_Infection_count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C8AB5A30A664C9F95DDBB58A2653481]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent_population_infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent_population_infected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Percent_population_infected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C8AB5A30A664C9F95DDBB58A2653481]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection count' datatype='integer' name='[Highest_Infection_count]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent population infected' datatype='real' name='[Percent_population_infected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_8C8AB5A30A664C9F95DDBB58A2653481]' role='measure' type='quantitative' />
      <column caption='Date' datatype='datetime' datatype-customized='true' name='[date]' role='dimension' type='ordinal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/User/AppData/Local/Temp/TableauTemp/#TableauTemp_01w8qeh0mhn5ql154koc81k23lmm.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/13/2024 11:25:55 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>266</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C8AB5A30A664C9F95DDBB58A2653481]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>266</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C8AB5A30A664C9F95DDBB58A2653481]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>8583</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C8AB5A30A664C9F95DDBB58A2653481]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Highest_Infection_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Highest_Infection_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Highest_Infection_count</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52726</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C8AB5A30A664C9F95DDBB58A2653481]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percent_population_infected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Percent_population_infected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percent_population_infected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>60218</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C8AB5A30A664C9F95DDBB58A2653481]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#5555ff'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff00ff'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_8C8AB5A30A664C9F95DDBB58A2653481'>
            <properties context=''>
              <relation connection='excel-direct.0983ob81mzpelm15h3rln11bxe8d' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='Highest_Infection_count' ordinal='3' />
                  <column datatype='real' name='Percent_population_infected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Table_1)' name='federated.120sokc1wo6j1g1fp2ayi0mc3b12' />
          </datasources>
          <datasource-dependencies datasource='federated.120sokc1wo6j1g1fp2ayi0mc3b12'>
            <column caption='Death Percentage' datatype='real' name='[Death_Percentage]' role='measure' type='quantitative' />
            <column-instance column='[Death_Percentage]' derivation='Sum' name='[sum:Death_Percentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[sum:Death_Percentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[sum:Death_Percentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[:Measure Names]' value='193' />
            <format attr='height' value='97' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
            <format attr='font-size' data-class='total' scope='cols' value='11' />
            <format attr='text-format' field='[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[sum:Death_Percentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[sum:total_cases:qk]' value='N' />
            <format attr='text-format' field='[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[sum:total_deaths:qk]' value='N' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ddebf0' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
            <format attr='color' data-class='total' scope='cols' value='#000000' />
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='height' field='[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[:Measure Names]' value='19' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='10' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-color' scope='cols' value='#00000079' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[Multiple Values]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7911050319671631' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{8D0E802A-429A-4484-A8B8-4F09C2D13E65}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Table_2)' name='federated.1aknrv11svhzrw1e5t6h00kcr198' />
          </datasources>
          <datasource-dependencies datasource='federated.1aknrv11svhzrw1e5t6h00kcr198'>
            <column caption='Total Death Count' datatype='integer' name='[Total_Death_Count]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total_Death_Count]' derivation='Sum' name='[sum:Total_Death_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1aknrv11svhzrw1e5t6h00kcr198].[none:continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1aknrv11svhzrw1e5t6h00kcr198].[sum:Total_Death_Count:qk]' field-type='quantitative' max='2206037' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1aknrv11svhzrw1e5t6h00kcr198].[none:continent:nk]' value='134' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='32' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1aknrv11svhzrw1e5t6h00kcr198].[sum:Total_Death_Count:qk]</rows>
        <cols>[federated.1aknrv11svhzrw1e5t6h00kcr198].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{DE117391-AB40-4542-B1CC-7D5CB0B5E60C}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Table_3)' name='federated.0rosy2g1m5b7ms1ggxkjs06rr7qg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0rosy2g1m5b7ms1ggxkjs06rr7qg'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent population infected' datatype='real' name='[Percent_population_infected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percent_population_infected]' derivation='Sum' name='[sum:Percent_population_infected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[none:Location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Location:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Location:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:Location:nk]' member='&quot;European Union&quot;' />
                <groupfilter function='member' level='[none:Location:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Location:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[none:Location:nk]</column>
            <column>[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[Latitude (generated)]</column>
            <column>[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[Latitude (generated)]' field-type='quantitative' max='17791322.673760563' min='-17020717.927957922' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' data-class='subtotal' scope='cols' value='5' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' scope='cols' value='5' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[sum:Percent_population_infected:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[none:Location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[none:Location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[none:Location:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[sum:Percent_population_infected:qk]' value='Percent population infected'>
              <formatted-text>
                <run>Percent population infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[none:Location:nk]' />
              <color column='[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[sum:Percent_population_infected:qk]' />
              <geometry column='[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[Latitude (generated)]</rows>
        <cols>[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{29D67D46-5DA8-456B-B0CD-E671661A583F}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Table_4)' name='federated.1ksqdmt0ab1dez10of8730o82rr2' />
          </datasources>
          <datasource-dependencies datasource='federated.1ksqdmt0ab1dez10of8730o82rr2'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent population infected' datatype='real' name='[Percent_population_infected]' role='measure' type='quantitative' />
            <column-instance column='[Percent_population_infected]' derivation='Avg' name='[avg:Percent_population_infected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='datetime' datatype-customized='true' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percent_population_infected]' derivation='Sum' name='[sum:Percent_population_infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ksqdmt0ab1dez10of8730o82rr2].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ksqdmt0ab1dez10of8730o82rr2].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ksqdmt0ab1dez10of8730o82rr2].[avg:Percent_population_infected:qk]' />
              <color column='[federated.1ksqdmt0ab1dez10of8730o82rr2].[none:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ksqdmt0ab1dez10of8730o82rr2].[sum:Percent_population_infected:qk]</rows>
        <cols>[federated.1ksqdmt0ab1dez10of8730o82rr2].[tyr:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='false' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='false' />
      </table>
      <simple-id uuid='{DD438C56-BBBE-43C2-852E-ADCA95EC7889}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='57239' id='14' param='horz' type-v2='layout-flow' w='99002' x='499' y='1072'>
            <zone h='57239' id='12' type-v2='layout-basic' w='99002' x='499' y='1072'>
              <zone h='57239' id='6' name='Sheet 3' w='45136' x='44389' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='57239' id='7' type-v2='layout-basic' w='43890' x='499' y='1072'>
                <zone h='18330' id='3' name='Sheet 1' w='43890' x='499' y='1072'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='38909' id='5' name='Sheet 2' w='43890' x='499' y='19402'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='57239' id='10' name='Sheet 3' pane-specification-id='2' param='[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[sum:Percent_population_infected:qk]' type-v2='color' w='9976' x='89525' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='40617' id='11' name='Sheet 4' w='89027' x='499' y='58311'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='40617' id='15' name='Sheet 4' pane-specification-id='0' param='[federated.1ksqdmt0ab1dez10of8730o82rr2].[none:Location:nk]' type-v2='color' w='9975' x='89526' y='58311'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97856' id='18' param='vert' type-v2='layout-flow' w='99002' x='499' y='1072'>
                <zone fixed-size='138' h='18330' id='3' is-fixed='true' name='Sheet 1' w='43890' x='499' y='1072'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57239' id='6' is-fixed='true' name='Sheet 3' w='45136' x='44389' y='1072'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='57239' id='10' name='Sheet 3' pane-specification-id='2' param='[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[sum:Percent_population_infected:qk]' type-v2='color' w='9976' x='89525' y='1072'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38909' id='5' is-fixed='true' name='Sheet 2' w='43890' x='499' y='19402'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40617' id='11' is-fixed='true' name='Sheet 4' w='89027' x='499' y='58311'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='40617' id='15' name='Sheet 4' pane-specification-id='0' param='[federated.1ksqdmt0ab1dez10of8730o82rr2].[none:Location:nk]' type-v2='color' w='9975' x='89526' y='58311'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F02B74DA-B363-4D88-BC3B-CB671D8077A4}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='137'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.120sokc1wo6j1g1fp2ayi0mc3b12].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{43C81087-9E7A-43D6-9ABB-8ECF83977722}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1aknrv11svhzrw1e5t6h00kcr198].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92C32167-84EC-4CE5-AF77-6C9C415D54F8}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='176'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[sum:Percent_population_infected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rosy2g1m5b7ms1ggxkjs06rr7qg].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B6DE9023-1329-41EE-BAA5-19805091AE66}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ksqdmt0ab1dez10of8730o82rr2].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ksqdmt0ab1dez10of8730o82rr2].[none:Location:nk]</field>
            <field>[federated.1ksqdmt0ab1dez10of8730o82rr2].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52AF0BAA-B3B8-449D-A513-D09AA54A60FA}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1ksqdmt0ab1dez10of8730o82rr2].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{78AE0BB9-482E-42D9-AC41-4317017C9FFF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='121' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB5CAYAAABvGS66AAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAQZElEQVR4nO3de1zO9//H8cd+NbREbY6XY6KvnCJmzMa+YsLqG21+1pytNoc5fc0cZtjW
      z+HrlDlfaCl9W4hvpNhqW1hOoVBGuVJUDhG5JLu6+f5xXUjHK4X8Pq/77eZ2u7o+78/n8+pz
      vZ+fz/v9+Vx45cGDBw8QQqH+50UXIMSLJAEQiiYBEIomARCKJgEQiiYBEIomARCKZlpagwvX
      bz2POoR4IeQKIBRNAiAUTQIgCju0gEFOjgxycmTloRddzLNV6hxAlF9a0GdM2pRYekMbD5av
      GoyqzHtIZee4EQQklWcb5ZOXdZ6ooPWERsaTknUPMMW8li2t3h/EiE/epbbJcy7ISBIAUU55
      3DqwjOkLwsjU5X9fh/Z6PEcD/GnR811cG76o+komAXgOVIPWETTo8c/HFjuy6BeA5rhvWFdp
      O4cx8uLW8OX3YWQBWHXC/aspOLWtSzWT+2jTzxDlF/6iSyyRBKDSyuPW6V1s3ujPkYSb5BqG
      FA6DPBnWvy01DUOKQsOrJDWTnNSGH3ozLXw6nYC8nBRO7trGnsgjXLh0Da0OMK3OGy264OI5
      nr52Fk9RYyLbvXfoO79pS9wX/B+uTR6OdapgXr8Dfad1yPcr5XD52H8I3fkLJ86nknlHB49+
      r88Z6dKa6vmPQNYp9q1fT/Af8dy6B1CNmvWaYduzP4MGONEkX8l5V/azZflGfj2VilYHVS1b
      0XnkJD7vY8OrTxzWmySErmVLwAHOZd2TAFROeaRun8JM9WlyH72nH1LsXz2JU4cnMftbZxqV
      YVx9ZZcXCwvOQ3R3yEz4BZ8vL5G7akW+zmukuHDCL+tfVncajXNp66f/B+85apKfLMLwe00h
      /d46vhvUFBOAu0dQj5lB5M38be9xKyOeowHxmNk6Mb6L/t28i4HMHqcmMd8QLDcrnv3LxhJ/
      cRErPe312+QuJ1Z4MH/v443KXaDK6NJWfjB0fsuOXzB/xz6CQnczf3hLTIGsmJVsCr8GGIZX
      4T/ibmNY18aD5eERBIVHEGQ4+wNgUp1mPT34as12NodGEBS+D/Vid5qbArqzBG09TF4Zy7xy
      PoE7htf27R92spKYYN6iF+7z1GzYsY+g8Aj+Hbgc17+ZAjoSNwdywlBE1q9Bhs5vRfeZP7El
      PIKg0N1sWLOEUQPbYfVoZ4ls/9bQ+a16M8k/LN+x0pEZvJTtSYamNyIIMXR+y16zWRsSIQGo
      jM7sCjScJdsyYJIrNmYmYGKGzcdzGdoaQMeZ4NACZ9KSqdyWsGDaYDpaW1LNBMCEmm0+xsmQ
      EJ0mhStlrPP6VcPpn6Y0MuZy1PAj5vwwA9e3mlHDTN/exLItA1w6PyyCS+n6l3e12YaV3kDV
      xEo/jDExo4Z1e5w8l/HJm4bFj65Cprz12QTerlVFf6wGjaanBcAlDv6R+HCjaA2rWTZoSs0q
      MgeohNLRnDV8+DZdsK+df1lt2nRqCmeS4fJpzt+Apq8bu937ZBwOZmvgLuI0GYYx9fP3V9oh
      Qv238MvxC1zNKr4IVev2WJJIFokEfubCrx3e5p2uvXDo0o5mdcweXW0eX4WaYtP8tccbMGmJ
      bWvYdwjSk5LJoTlmDdvQxgqSb0Ky72hG7HOQAFQ+OnS64peamDz8yLLR3gWMCsBdTqwYzb/2
      XKWETZdZrToNgLNAMqmpeVDKHCDn6DKmzNtd4HZpMVqPZubYSyxcf4hM3T2unIhk+4lItq82
      xbzdx8yYPQJbC8jLe7ixRAI+dSSgqG1du85NwIw2fOz1BWlz1nD8mo7c9OMSgMrHFNMSPpXH
      H7gF5q8V3+4JNyIIMXR+y44eTJj4D+wMZ9HHt2TLrm5bB2pzlmtA7MlY8t5xKGEecIMD2wyd
      /4nbpeifPM/9uUD7KjR18WKNUzYpCceJj43gwJ4YzmXdQxvnxwLfdqjHO5S55lebuTLdrx9a
      TTxxp05KACqf+li3tIA/syHpELHXBqN6NAy6xuljyfqXDdrQwtjhz7kznAGgKU6eg2lTp4JK
      te1BjwYBbLsMd8I3ssvZvoQ7SWf5M1b/qpHLGFzb1y1x03n370OVKphUsaCxfQ8a2/fAaVg2
      hxcMZclv2dxJOMcVHFBZt8CURHTUxXmZH0PtSrgK5d3nL6rwqkkVzK3b09W6vUyCK6PWzoNp
      CsApti7eRlJOnv7+tc9c/M4AmNJ6YH9DG4A3eP1hSJJ+JeL0TfKAvJwc/gJ4vTb6xckcikri
      L/TPBWKC5hN4oDyVNsdt4gAsAXRnCZg+k50nr3AvD+A+Ws0hdi6aT9glQ42GPp964HeS76N/
      LnA4kB989xfa8pWdkxn/5RrCYy9wO0d/aygvJ53L6Tn6BqYm+quNQ296WQFcYde3+fcPf91J
      43xUIMu2HNG/kR7MnBGT2RxykpSsHPKQSXDl1PAjvvCIZqb6NHdi1zBjwJonFlt2HM8op/yz
      49d4s39fLA+FkUUiu6Z+yC7g0YOwfGfq5C2efLLFsJpVJ+wbQEoST82k3XiWzofZs3dw+eYx
      Aqa7FxiHN8fdHeBvvN2rITu3XIKkzUxz2fywCOw7NgRNwe9K6cg8tY1NX21jU6G9WtH9Yyfq
      ApjYM2hiX45+H0ZmkfsHen3H5IdbvRbH7tX/ZPdq/c9yBaiUTGjktpSVi7/gXTsrqgL6J6at
      eHfscv5VxEMwszcn4/X1h7RtWN1wVjPFvFZNqgDQHLcl8/ng4baqWWHbbzYrfBfSx7r81Vbv
      MJ7F/msZM9CBxpbVDO8a6h31Kd3q699p6r6cmQNbUbMaQDVq2n3ApE0BzHIuXITK1QuvKUN5
      066eoT36J9d2vRi5WM2YLo8fA1fvMpUV62fzQQfrx20N+3/T/QvmuBvu9TYcyHTvL3Hr2oo6
      hjpfKe1fhpO/ESb+P5MrgFC0UucAN5LPP486hHghSh0CpaenP69ahHjuZAgkFE0CIBRNAiAU
      TQIgFE0CIBRNAiAUTQIgFE0CIBRNAiAUTQIgFE0CIBRNAiAUTQIgFE0CIBRNAiAUTQIgFE0C
      IBRNAiAUTQIgFE0CIBRNAiAUTQIgFE0CIBRNAiAUTQIgFE0CIBRNAiAUTQIgFE0CIBRNAiAU
      TQIgFE0CIBRNAiAUTQIgFE0CIBRNAiAUTQIgFE0CIBRNAiAUTQJgEDlNhUplxB9nNRrDOhq1
      s3HrqKYRWWB/UbNsSl5nWsE1ilaeGh7L5WLYN/RvqcLI3QI6Mo+p8exmg7NaU3rzUrYztl8n
      WqpUqFQt6fTRVPxP3qrgGnK5GLaA4b3bYZNvP6X+T/FK0XNRGmmLSmigi2ZuJzf2934Ha8Nb
      1h67SPMoaasZ+A92YE6tHrz1xPvXSUvJoeO8g+zysC5mXeM8fQ16uRfD8Bo7mQ1JUOM2tDZi
      n7rMY/jMmMiCiExeJYcWT1c6oCPR5xM++P4mbiuDiOndDHO0XAj5mqFuvYlT/8yinjXLX4Mu
      kUBPd2Zd6s3KVQdYb1uDqrm3ORe5UK4Axrq1xxe/bEc8BtkZvY7uVAA+UQ0ZMawP5k8sSSct
      GZo3aVTBVZahhtyLhH3TH/s+i7ju+iMnYlfjUurGMjmm9qRHt1GE1vuan+N2889W5ShO48Pk
      WX/Sd81WvPo2w9wUMDWn2cBl7FnmwHaPrwgpeCF4iho0PpOZcvo91Fu96Gtbg6oAVWtg29dL
      rgDGScDXOwSLodv5sJ6x62jZu24VCd3nsaVzgcOs1XAuyQbb+s/68BdfgybAix21vmRv7Hs0
      qQqUMEB6JMqbOalOqA+uptUbpoCGiKeuTUe07ypiuk9F/X7hs3xNl4lM9HbE23ciLhPynXTK
      XMMR/FfF0H2qmqIuJhIAI2hDV+Gd0JHpG7oaf8ASNrI02IIh/gMolJn0y1ykKe/Vr9g6y1KD
      9cj1rC/r9np+S2jPCqqN4/yy8yqO050KHx8A7Ph7fxsW/HwAzQS7R8POMtegieXIVXv6dSl6
      LzIEKlUGO/yCYeDnuBs9XNcR/dMmEuxGMbKneeHFKRpiqU+dWhVZZxlreNFSz3Diah1smxV/
      ENq27wox8ZzXlXdnppiaFL1EAlAKXfRaFkfZMXFcf4zuRhmBeK/PZuCU0RQ1Y9AkJUDHFpRv
      +lu+Gl643Hvk0Ih6tUto09gaexK5mFqO/dSpSwNiiC8mRRKAEt1ij68f2Y4eGD/31XEqwIeo
      hiMY1qfoyKSlnoeYOXTLf5uyZSe6fzQG7+B4Mst9xiu9hhcuRUNsaW1MTMs/Rjd3xHmgGSFr
      fUgs4rhKAEqS4It3iAVDx35YzDi1CNq9rFuVQPcJHhSc+z7U7duzpKWlPfFHcySMDePsOLPE
      mc49ZhFpzG3wctSgHOb091LjdmkO7p4r+O2CFn0Ocrl97ZwEoHhaIn02kdBxHMO7Gt+LNAFr
      CbYYgucAoyMDQNUatbF9bwLrf9/L1Nd98JgVirasJZezhueqsTX2pbXJ01HuiyFAzZ4s2h/N
      PNsYvFzb0VilQqWyp+dwLwlAsTJ2sN4/m4Gfuxs/VtdF47sqBrtRI3nqeadpc4Z5uJAT/DuH
      n2b9iqjhebC0ohapZFwroU2KhliaUyGPS6o2oe90X36OSzJcdc9ybI+vBKBoOo6oVxBlN47P
      yjCGzti2Gr9sFyYOL9+007x6DUDL3Zyyr1tRNTxztVrTweYq5y5cL7bJqZPR0LEVLZ7hME4C
      UBTtXjb/eInuI91pa/yNf4LUEVgMHU6/op/eGy0jLQXq1KOOWVnXrLganr22vPN+HSJ2hpNR
      5PIEfg1Nwi7fV0+eBQlAERI2LiXYwpOJg40fQ+sflnVn6uelPCzTbGNF8EVyi1t+K5KlK6Kw
      G+aKQxlqLlMNlUTnIRPpcnQxC/cVnvHfCvHGO/lZX8l0EoBCtJH4bErAbtT/YvzcV0PA2mAY
      OJRS5511GnN/Yx/s/z6cBcFxpNw2REGnJe2QGs9+HoRYe7FuQtsCnTgD/8ElfauzDDU8Vzqi
      57ZHpXKm0Bc2rYeyyMuBg2M+YlbYBbQ6QKflQvBk+k0+jpt6IS4VcSWL+g7XqWp+O3dDvw8g
      9/Y5wr75B688ePDgQUnrpqenV0AFL48M/8E4zKmFOm4l/Y0c/uui59LJbT+jIiKYYNQJK5cr
      caH4LNlAyIk/Sb6eA9RA1f4tPvz0KzxcWvFGwfAlrMDRcQHZY3byx+zOhc7wZashkmmqIfgb
      Uenjb6xqUDt3Y06MESsN8SdtkeH7CtpQxrfzIOztpRz0G1zE7WQdmccCmb9wObsPpnGbGqi6
      fcCkWbMZ0r5g73/KGnIv8tvmDfjsCOPwyTRuA2a1WvOO+xQJwMtBR/TcTrjtcWPnH7Nfqnv7
      +hPKqyw96EcZRpTPzUt0KBVMu5ctflUY8+8ZL1XnhwSCfI7i6HWwUnZ+kAC8FDJ2+HFkxEr+
      eLl6P7ron/BXeRFSWXs/yBBIKJvcBRKKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYB
      EIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCK
      JgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQivZf0cQGVvc4r80AAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
